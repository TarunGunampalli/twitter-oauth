{"ast":null,"code":"var _jsxFileName = \"/Users/tarungunampalli/Documents/twitter-oauth/src/Login.js\";\nimport OAuth2Login from 'react-simple-oauth2-login';\nimport { TwitterApi } from 'twitter-api-v2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst onSuccess = response => console.log(response);\n\nconst onFailure = response => console.error(response);\n\nconst Login = async () => {\n  const appOnlyClientFromConsumer = await userClient.appLogin(); // return (\n  // \t<OAuth2Login\n  // \t\tauthorizationUrl='https://twitter.com/i/oauth2/authorize'\n  // \t\tresponseType='code'\n  // \t\tclientId={process.env.REACT_APP_CLIENT_ID}\n  // \t\tredirectUri='http://localhost:3000/success'\n  // \t\tscope='tweet.read'\n  // \t\textraParams={{ state: 'state', code_challenge: 'challenge', code_challenge_method: 'plain' }}\n  // \t\tonSuccess={onSuccess}\n  // \t\tonFailure={onFailure}\n  // \t/>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"login screen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/tarungunampalli/Documents/twitter-oauth/src/Login.js"],"names":["OAuth2Login","TwitterApi","onSuccess","response","console","log","onFailure","error","Login","appOnlyClientFromConsumer","userClient","appLogin"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,2BAAxB;AACA,SAASC,UAAT,QAA2B,gBAA3B;;;AAEA,MAAMC,SAAS,GAAIC,QAAD,IAAcC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAAhC;;AACA,MAAMG,SAAS,GAAIH,QAAD,IAAcC,OAAO,CAACG,KAAR,CAAcJ,QAAd,CAAhC;;AAEA,MAAMK,KAAK,GAAG,YAAY;AACzB,QAAMC,yBAAyB,GAAG,MAAMC,UAAU,CAACC,QAAX,EAAxC,CADyB,CAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAfD;;KAAMH,K;AAiBN,eAAeA,KAAf","sourcesContent":["import OAuth2Login from 'react-simple-oauth2-login';\nimport { TwitterApi } from 'twitter-api-v2';\n\nconst onSuccess = (response) => console.log(response);\nconst onFailure = (response) => console.error(response);\n\nconst Login = async () => {\n\tconst appOnlyClientFromConsumer = await userClient.appLogin();\n\t// return (\n\t// \t<OAuth2Login\n\t// \t\tauthorizationUrl='https://twitter.com/i/oauth2/authorize'\n\t// \t\tresponseType='code'\n\t// \t\tclientId={process.env.REACT_APP_CLIENT_ID}\n\t// \t\tredirectUri='http://localhost:3000/success'\n\t// \t\tscope='tweet.read'\n\t// \t\textraParams={{ state: 'state', code_challenge: 'challenge', code_challenge_method: 'plain' }}\n\t// \t\tonSuccess={onSuccess}\n\t// \t\tonFailure={onFailure}\n\t// \t/>\n\t// );\n\treturn <div>login screen</div>;\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}