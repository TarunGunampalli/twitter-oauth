{"ast":null,"code":"var _jsxFileName = \"/Users/tarungunampalli/Documents/twitter-oauth/src/Success.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getTweets = async (userID, accessCode) => {\n  const response = await fetch(`https://api.twitter.com/2/users/${userID}/tweets`, {\n    method: 'GET',\n    // *GET, POST, PUT, DELETE, etc.\n    mode: 'no-cors',\n    // no-cors, *cors, same-origin\n    // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    // credentials: 'same-origin', // include, *same-origin, omit\n    headers: {// Authorization: `Bearer ${accessCode}`,\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    } // redirect: 'follow', // manual, *follow, error\n    // referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    // body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n\n  });\n  console.log(response);\n  return response;\n};\n\nconst getAccessToken = authorizationCode => {};\n\nconst Success = () => {\n  const params = new URLSearchParams(window.location.search);\n  const authorizationCode = params.get('code');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hi\", {\n      children: \"Success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Access Code: \", authorizationCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getTweets('14337705', authorizationCode),\n      children: \"Get Tweets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Success;\nexport default Success;\n\nvar _c;\n\n$RefreshReg$(_c, \"Success\");","map":{"version":3,"sources":["/Users/tarungunampalli/Documents/twitter-oauth/src/Success.js"],"names":["getTweets","userID","accessCode","response","fetch","method","mode","headers","console","log","getAccessToken","authorizationCode","Success","params","URLSearchParams","window","location","search","get"],"mappings":";;;AAAA,MAAMA,SAAS,GAAG,OAAOC,MAAP,EAAeC,UAAf,KAA8B;AAC/C,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mCAAkCH,MAAO,SAA3C,EAAqD;AAChFI,IAAAA,MAAM,EAAE,KADwE;AACjE;AACfC,IAAAA,IAAI,EAAE,SAF0E;AAE/D;AACjB;AACA;AACAC,IAAAA,OAAO,EAAE,CACR;AACA;AAFQ,KALuE,CAShF;AACA;AACA;;AAXgF,GAArD,CAA5B;AAaAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,SAAOA,QAAP;AACA,CAhBD;;AAkBA,MAAMO,cAAc,GAAIC,iBAAD,IAAuB,CAE7C,CAFD;;AAIA,MAAMC,OAAO,GAAG,MAAM;AACrB,QAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAf;AACA,QAAMN,iBAAiB,GAAGE,MAAM,CAACK,GAAP,CAAW,MAAX,CAA1B;AACA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,kCAAmBP,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAQ,MAAA,OAAO,EAAE,MAAMX,SAAS,CAAC,UAAD,EAAaW,iBAAb,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAVD;;KAAMC,O;AAYN,eAAeA,OAAf","sourcesContent":["const getTweets = async (userID, accessCode) => {\n\tconst response = await fetch(`https://api.twitter.com/2/users/${userID}/tweets`, {\n\t\tmethod: 'GET', // *GET, POST, PUT, DELETE, etc.\n\t\tmode: 'no-cors', // no-cors, *cors, same-origin\n\t\t// cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t\t// credentials: 'same-origin', // include, *same-origin, omit\n\t\theaders: {\n\t\t\t// Authorization: `Bearer ${accessCode}`,\n\t\t\t// 'Content-Type': 'application/x-www-form-urlencoded',\n\t\t},\n\t\t// redirect: 'follow', // manual, *follow, error\n\t\t// referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\t\t// body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n\t});\n\tconsole.log(response);\n\treturn response;\n};\n\nconst getAccessToken = (authorizationCode) => {\n\t\n}\n\nconst Success = () => {\n\tconst params = new URLSearchParams(window.location.search);\n\tconst authorizationCode = params.get('code');\n\treturn (\n\t\t<div>\n\t\t\t<hi>Success</hi>\n\t\t\t<div>Access Code: {authorizationCode}</div>\n\t\t\t<button onClick={() => getTweets('14337705', authorizationCode)}>Get Tweets</button>\n\t\t</div>\n\t);\n};\n\nexport default Success;\n"]},"metadata":{},"sourceType":"module"}