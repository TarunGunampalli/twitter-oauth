{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TweetV2UserLikedTweetsPaginator = exports.TweetUserMentionTimelineV2Paginator = exports.TweetUserTimelineV2Paginator = exports.TweetSearchAllV2Paginator = exports.TweetSearchRecentV2Paginator = void 0;\n\nconst TwitterPaginator_1 = require(\"./TwitterPaginator\");\n/** A generic PreviousableTwitterPaginator able to consume TweetV2[]. */\n\n\nclass TweetsV2Paginator extends TwitterPaginator_1.PreviousableTwitterPaginator {\n  updateIncludes(data) {\n    if (!data.includes) {\n      return;\n    }\n\n    if (!this._realData.includes) {\n      this._realData.includes = {};\n    }\n\n    const includesRealData = this._realData.includes;\n\n    for (const [includeKey, includeArray] of Object.entries(data.includes)) {\n      if (!includesRealData[includeKey]) {\n        includesRealData[includeKey] = [];\n      }\n\n      includesRealData[includeKey] = [...includesRealData[includeKey], ...includeArray];\n    }\n  }\n\n  getPageLengthFromRequest(result) {\n    var _a, _b;\n\n    return (_b = (_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n  }\n\n  isFetchLastOver(result) {\n    var _a;\n\n    return !((_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) || !this.canFetchNextPage(result.data);\n  }\n\n  canFetchNextPage(result) {\n    return !!result.meta.next_token;\n  }\n\n  getItemArray() {\n    return this.tweets;\n  }\n  /**\n   * Tweets returned by paginator.\n   */\n\n\n  get tweets() {\n    var _a;\n\n    return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n  }\n\n  get meta() {\n    return this._realData.meta;\n  }\n\n  get includes() {\n    var _a;\n\n    return (_a = this._realData.includes) !== null && _a !== void 0 ? _a : {};\n  }\n\n}\n/** A generic PreviousableTwitterPaginator able to consume TweetV2 timelines. */\n\n\nclass TweetTimelineV2Paginator extends TweetsV2Paginator {\n  refreshInstanceFromResult(response, isNextPage) {\n    var _a;\n\n    const result = response.data;\n    const resultData = (_a = result.data) !== null && _a !== void 0 ? _a : [];\n    this._rateLimit = response.rateLimit;\n\n    if (!this._realData.data) {\n      this._realData.data = [];\n    }\n\n    if (isNextPage) {\n      this._realData.meta.oldest_id = result.meta.oldest_id;\n      this._realData.meta.result_count += result.meta.result_count;\n      this._realData.meta.next_token = result.meta.next_token;\n\n      this._realData.data.push(...resultData);\n    } else {\n      this._realData.meta.newest_id = result.meta.newest_id;\n      this._realData.meta.result_count += result.meta.result_count;\n\n      this._realData.data.unshift(...resultData);\n    }\n\n    this.updateIncludes(result);\n  }\n\n  getNextQueryParams(maxResults) {\n    return { ...this.injectQueryParams(maxResults),\n      until_id: this._realData.meta.oldest_id\n    };\n  }\n\n  getPreviousQueryParams(maxResults) {\n    return { ...this.injectQueryParams(maxResults),\n      since_id: this._realData.meta.newest_id\n    };\n  }\n\n} // ----------------\n// - Tweet search -\n// ----------------\n\n\nclass TweetSearchRecentV2Paginator extends TweetTimelineV2Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'tweets/search/recent';\n  }\n\n}\n\nexports.TweetSearchRecentV2Paginator = TweetSearchRecentV2Paginator;\n\nclass TweetSearchAllV2Paginator extends TweetTimelineV2Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'tweets/search/all';\n  }\n\n}\n\nexports.TweetSearchAllV2Paginator = TweetSearchAllV2Paginator;\n\nclass TweetUserTimelineV2Paginator extends TweetTimelineV2Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'users/:id/tweets';\n  }\n\n}\n\nexports.TweetUserTimelineV2Paginator = TweetUserTimelineV2Paginator;\n\nclass TweetUserMentionTimelineV2Paginator extends TweetTimelineV2Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'users/:id/mentions';\n  }\n\n}\n\nexports.TweetUserMentionTimelineV2Paginator = TweetUserMentionTimelineV2Paginator; // ---------------------------------------------------------------------------------\n// - Tweet lists (consume tweets with pagination tokens instead of since/until id) -\n// ---------------------------------------------------------------------------------\n\n/** A generic TwitterPaginator able to consume TweetV2 timelines. */\n\nclass TweetListV2Paginator extends TweetsV2Paginator {\n  refreshInstanceFromResult(response, isNextPage) {\n    var _a;\n\n    const result = response.data;\n    const resultData = (_a = result.data) !== null && _a !== void 0 ? _a : [];\n    this._rateLimit = response.rateLimit;\n\n    if (!this._realData.data) {\n      this._realData.data = [];\n    }\n\n    if (isNextPage) {\n      this._realData.meta.result_count += result.meta.result_count;\n      this._realData.meta.next_token = result.meta.next_token;\n\n      this._realData.data.push(...resultData);\n    } else {\n      this._realData.meta.result_count += result.meta.result_count;\n      this._realData.meta.previous_token = result.meta.previous_token;\n\n      this._realData.data.unshift(...resultData);\n    }\n\n    this.updateIncludes(result);\n  }\n\n  getNextQueryParams(maxResults) {\n    return { ...this.injectQueryParams(maxResults),\n      pagination_token: this._realData.meta.next_token\n    };\n  }\n\n  getPreviousQueryParams(maxResults) {\n    return { ...this.injectQueryParams(maxResults),\n      pagination_token: this._realData.meta.previous_token\n    };\n  }\n\n}\n\nclass TweetV2UserLikedTweetsPaginator extends TweetListV2Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'users/:id/liked_tweets';\n  }\n\n}\n\nexports.TweetV2UserLikedTweetsPaginator = TweetV2UserLikedTweetsPaginator;","map":{"version":3,"sources":["/Users/tarungunampalli/Documents/twitter-oauth/node_modules/twitter-api-v2/dist/paginators/tweet.paginator.v2.js"],"names":["Object","defineProperty","exports","value","TweetV2UserLikedTweetsPaginator","TweetUserMentionTimelineV2Paginator","TweetUserTimelineV2Paginator","TweetSearchAllV2Paginator","TweetSearchRecentV2Paginator","TwitterPaginator_1","require","TweetsV2Paginator","PreviousableTwitterPaginator","updateIncludes","data","includes","_realData","includesRealData","includeKey","includeArray","entries","getPageLengthFromRequest","result","_a","_b","length","isFetchLastOver","canFetchNextPage","meta","next_token","getItemArray","tweets","TweetTimelineV2Paginator","refreshInstanceFromResult","response","isNextPage","resultData","_rateLimit","rateLimit","oldest_id","result_count","push","newest_id","unshift","getNextQueryParams","maxResults","injectQueryParams","until_id","getPreviousQueryParams","since_id","constructor","arguments","_endpoint","TweetListV2Paginator","previous_token","pagination_token"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TweetV2UserLikedTweetsPaginator = exports.TweetUserMentionTimelineV2Paginator = exports.TweetUserTimelineV2Paginator = exports.TweetSearchAllV2Paginator = exports.TweetSearchRecentV2Paginator = void 0;\nconst TwitterPaginator_1 = require(\"./TwitterPaginator\");\n/** A generic PreviousableTwitterPaginator able to consume TweetV2[]. */\nclass TweetsV2Paginator extends TwitterPaginator_1.PreviousableTwitterPaginator {\n    updateIncludes(data) {\n        if (!data.includes) {\n            return;\n        }\n        if (!this._realData.includes) {\n            this._realData.includes = {};\n        }\n        const includesRealData = this._realData.includes;\n        for (const [includeKey, includeArray] of Object.entries(data.includes)) {\n            if (!includesRealData[includeKey]) {\n                includesRealData[includeKey] = [];\n            }\n            includesRealData[includeKey] = [\n                ...includesRealData[includeKey],\n                ...includeArray,\n            ];\n        }\n    }\n    getPageLengthFromRequest(result) {\n        var _a, _b;\n        return (_b = (_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n    }\n    isFetchLastOver(result) {\n        var _a;\n        return !((_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) || !this.canFetchNextPage(result.data);\n    }\n    canFetchNextPage(result) {\n        return !!result.meta.next_token;\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return this._realData.meta;\n    }\n    get includes() {\n        var _a;\n        return (_a = this._realData.includes) !== null && _a !== void 0 ? _a : {};\n    }\n}\n/** A generic PreviousableTwitterPaginator able to consume TweetV2 timelines. */\nclass TweetTimelineV2Paginator extends TweetsV2Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        var _a;\n        const result = response.data;\n        const resultData = (_a = result.data) !== null && _a !== void 0 ? _a : [];\n        this._rateLimit = response.rateLimit;\n        if (!this._realData.data) {\n            this._realData.data = [];\n        }\n        if (isNextPage) {\n            this._realData.meta.oldest_id = result.meta.oldest_id;\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.meta.next_token = result.meta.next_token;\n            this._realData.data.push(...resultData);\n        }\n        else {\n            this._realData.meta.newest_id = result.meta.newest_id;\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.data.unshift(...resultData);\n        }\n        this.updateIncludes(result);\n    }\n    getNextQueryParams(maxResults) {\n        return {\n            ...this.injectQueryParams(maxResults),\n            until_id: this._realData.meta.oldest_id,\n        };\n    }\n    getPreviousQueryParams(maxResults) {\n        return {\n            ...this.injectQueryParams(maxResults),\n            since_id: this._realData.meta.newest_id,\n        };\n    }\n}\n// ----------------\n// - Tweet search -\n// ----------------\nclass TweetSearchRecentV2Paginator extends TweetTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/search/recent';\n    }\n}\nexports.TweetSearchRecentV2Paginator = TweetSearchRecentV2Paginator;\nclass TweetSearchAllV2Paginator extends TweetTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/search/all';\n    }\n}\nexports.TweetSearchAllV2Paginator = TweetSearchAllV2Paginator;\nclass TweetUserTimelineV2Paginator extends TweetTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/tweets';\n    }\n}\nexports.TweetUserTimelineV2Paginator = TweetUserTimelineV2Paginator;\nclass TweetUserMentionTimelineV2Paginator extends TweetTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/mentions';\n    }\n}\nexports.TweetUserMentionTimelineV2Paginator = TweetUserMentionTimelineV2Paginator;\n// ---------------------------------------------------------------------------------\n// - Tweet lists (consume tweets with pagination tokens instead of since/until id) -\n// ---------------------------------------------------------------------------------\n/** A generic TwitterPaginator able to consume TweetV2 timelines. */\nclass TweetListV2Paginator extends TweetsV2Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        var _a;\n        const result = response.data;\n        const resultData = (_a = result.data) !== null && _a !== void 0 ? _a : [];\n        this._rateLimit = response.rateLimit;\n        if (!this._realData.data) {\n            this._realData.data = [];\n        }\n        if (isNextPage) {\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.meta.next_token = result.meta.next_token;\n            this._realData.data.push(...resultData);\n        }\n        else {\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.meta.previous_token = result.meta.previous_token;\n            this._realData.data.unshift(...resultData);\n        }\n        this.updateIncludes(result);\n    }\n    getNextQueryParams(maxResults) {\n        return {\n            ...this.injectQueryParams(maxResults),\n            pagination_token: this._realData.meta.next_token,\n        };\n    }\n    getPreviousQueryParams(maxResults) {\n        return {\n            ...this.injectQueryParams(maxResults),\n            pagination_token: this._realData.meta.previous_token,\n        };\n    }\n}\nclass TweetV2UserLikedTweetsPaginator extends TweetListV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/liked_tweets';\n    }\n}\nexports.TweetV2UserLikedTweetsPaginator = TweetV2UserLikedTweetsPaginator;\n"]},"metadata":{},"sourceType":"script"}