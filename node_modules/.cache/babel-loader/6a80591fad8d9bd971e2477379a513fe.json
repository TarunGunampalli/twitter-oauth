{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst client_v1_write_1 = __importDefault(require(\"../v1/client.v1.write\"));\n\nconst client_v2_write_1 = __importDefault(require(\"../v2/client.v2.write\"));\n\nconst readonly_1 = __importDefault(require(\"./readonly\"));\n/**\n * Twitter v1.1 and v2 API client.\n */\n\n\nclass TwitterApiReadWrite extends readonly_1.default {\n  /* Direct access to subclients */\n  get v1() {\n    if (this._v1) return this._v1;\n    return this._v1 = new client_v1_write_1.default(this);\n  }\n\n  get v2() {\n    if (this._v2) return this._v2;\n    return this._v2 = new client_v2_write_1.default(this);\n  }\n  /**\n   * Get a client with read only rights.\n   */\n\n\n  get readOnly() {\n    return this;\n  }\n\n}\n\nexports.default = TwitterApiReadWrite;","map":{"version":3,"sources":["/Users/tarungunampalli/Documents/twitter-oauth/node_modules/twitter-api-v2/dist/client/readwrite.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","client_v1_write_1","require","client_v2_write_1","readonly_1","TwitterApiReadWrite","default","v1","_v1","v2","_v2","readOnly"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,iBAAiB,GAAGP,eAAe,CAACQ,OAAO,CAAC,uBAAD,CAAR,CAAzC;;AACA,MAAMC,iBAAiB,GAAGT,eAAe,CAACQ,OAAO,CAAC,uBAAD,CAAR,CAAzC;;AACA,MAAME,UAAU,GAAGV,eAAe,CAACQ,OAAO,CAAC,YAAD,CAAR,CAAlC;AACA;AACA;AACA;;;AACA,MAAMG,mBAAN,SAAkCD,UAAU,CAACE,OAA7C,CAAqD;AACjD;AACM,MAAFC,EAAE,GAAG;AACL,QAAI,KAAKC,GAAT,EACI,OAAO,KAAKA,GAAZ;AACJ,WAAO,KAAKA,GAAL,GAAW,IAAIP,iBAAiB,CAACK,OAAtB,CAA8B,IAA9B,CAAlB;AACH;;AACK,MAAFG,EAAE,GAAG;AACL,QAAI,KAAKC,GAAT,EACI,OAAO,KAAKA,GAAZ;AACJ,WAAO,KAAKA,GAAL,GAAW,IAAIP,iBAAiB,CAACG,OAAtB,CAA8B,IAA9B,CAAlB;AACH;AACD;AACJ;AACA;;;AACgB,MAARK,QAAQ,GAAG;AACX,WAAO,IAAP;AACH;;AAjBgD;;AAmBrDZ,OAAO,CAACO,OAAR,GAAkBD,mBAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst client_v1_write_1 = __importDefault(require(\"../v1/client.v1.write\"));\nconst client_v2_write_1 = __importDefault(require(\"../v2/client.v2.write\"));\nconst readonly_1 = __importDefault(require(\"./readonly\"));\n/**\n * Twitter v1.1 and v2 API client.\n */\nclass TwitterApiReadWrite extends readonly_1.default {\n    /* Direct access to subclients */\n    get v1() {\n        if (this._v1)\n            return this._v1;\n        return this._v1 = new client_v1_write_1.default(this);\n    }\n    get v2() {\n        if (this._v2)\n            return this._v2;\n        return this._v2 = new client_v2_write_1.default(this);\n    }\n    /**\n     * Get a client with read only rights.\n     */\n    get readOnly() {\n        return this;\n    }\n}\nexports.default = TwitterApiReadWrite;\n"]},"metadata":{},"sourceType":"script"}