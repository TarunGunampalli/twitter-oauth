{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OAuth1Helper = void 0;\n\nconst crypto = __importStar(require(\"crypto\"));\n\nclass OAuth1Helper {\n  constructor(options) {\n    this.nonceLength = 32;\n    this.consumerKeys = options.consumerKeys;\n  }\n\n  hash(base, key) {\n    return crypto.createHmac('sha1', key).update(base).digest('base64');\n  }\n\n  authorize(request) {\n    let accessTokens = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const oauthInfo = {\n      oauth_consumer_key: this.consumerKeys.key,\n      oauth_nonce: this.getNonce(),\n      oauth_signature_method: 'HMAC-SHA1',\n      oauth_timestamp: this.getTimestamp(),\n      oauth_version: '1.0'\n    };\n\n    if (accessTokens.key !== undefined) {\n      oauthInfo.oauth_token = accessTokens.key;\n    }\n\n    if (!request.data) {\n      request.data = {};\n    }\n\n    oauthInfo.oauth_signature = this.getSignature(request, accessTokens.secret, oauthInfo);\n    return oauthInfo;\n  }\n\n  toHeader(oauthInfo) {\n    const sorted = sortObject(oauthInfo);\n    let header_value = 'OAuth ';\n\n    for (const element of sorted) {\n      if (element.key.indexOf('oauth_') !== 0) {\n        continue;\n      }\n\n      header_value += percentEncode(element.key) + '=\"' + percentEncode(element.value) + '\",';\n    }\n\n    return {\n      // Remove the last ,\n      Authorization: header_value.slice(0, header_value.length - 1)\n    };\n  }\n\n  getNonce() {\n    const wordCharacters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    let result = '';\n\n    for (let i = 0; i < this.nonceLength; i++) {\n      result += wordCharacters[Math.trunc(Math.random() * wordCharacters.length)];\n    }\n\n    return result;\n  }\n\n  getTimestamp() {\n    return Math.trunc(new Date().getTime() / 1000);\n  }\n\n  getSignature(request, tokenSecret, oauthInfo) {\n    return this.hash(this.getBaseString(request, oauthInfo), this.getSigningKey(tokenSecret));\n  }\n\n  getSigningKey(tokenSecret) {\n    return percentEncode(this.consumerKeys.secret) + '&' + percentEncode(tokenSecret || '');\n  }\n\n  getBaseString(request, oauthInfo) {\n    return request.method.toUpperCase() + '&' + percentEncode(this.getBaseUrl(request.url)) + '&' + percentEncode(this.getParameterString(request, oauthInfo));\n  }\n\n  getParameterString(request, oauthInfo) {\n    const baseStringData = sortObject(percentEncodeData(mergeObject(oauthInfo, mergeObject(request.data, deParamUrl(request.url)))));\n    let dataStr = '';\n\n    for (const {\n      key,\n      value\n    } of baseStringData) {\n      // check if the value is an array\n      // this means that this key has multiple values\n      if (value && Array.isArray(value)) {\n        // sort the array first\n        value.sort();\n        let valString = ''; // serialize all values for this key: e.g. formkey=formvalue1&formkey=formvalue2\n\n        value.forEach((item, i) => {\n          valString += key + '=' + item;\n\n          if (i < value.length) {\n            valString += '&';\n          }\n        });\n        dataStr += valString;\n      } else {\n        dataStr += key + '=' + value + '&';\n      }\n    } // Remove the last character\n\n\n    return dataStr.slice(0, dataStr.length - 1);\n  }\n\n  getBaseUrl(url) {\n    return url.split('?')[0];\n  }\n\n}\n\nexports.OAuth1Helper = OAuth1Helper;\nexports.default = OAuth1Helper; // Helper functions //\n\nfunction mergeObject(obj1, obj2) {\n  return { ...(obj1 || {}),\n    ...(obj2 || {})\n  };\n}\n\nfunction sortObject(data) {\n  return Object.keys(data).sort().map(key => ({\n    key,\n    value: data[key]\n  }));\n}\n\nfunction deParam(string) {\n  const splitted = string.split('&');\n  const data = {};\n\n  for (const coupleKeyValue of splitted) {\n    const [key, value = ''] = coupleKeyValue.split('='); // check if the key already exists\n    // this can occur if the QS part of the url contains duplicate keys like this: ?formkey=formvalue1&formkey=formvalue2\n\n    if (data[key]) {\n      // the key exists already\n      if (!Array.isArray(data[key])) {\n        // replace the value with an array containing the already present value\n        data[key] = [data[key]];\n      } // and add the new found value to it\n\n\n      data[key].push(decodeURIComponent(value));\n    } else {\n      // it doesn't exist, just put the found value in the data object\n      data[key] = decodeURIComponent(value);\n    }\n  }\n\n  return data;\n}\n\nfunction deParamUrl(url) {\n  const tmp = url.split('?');\n  if (tmp.length === 1) return {};\n  return deParam(tmp[1]);\n}\n\nfunction percentEncode(str) {\n  return encodeURIComponent(str).replace(/!/g, '%21').replace(/\\*/g, '%2A').replace(/'/g, '%27').replace(/\\(/g, '%28').replace(/\\)/g, '%29');\n}\n\nfunction percentEncodeData(data) {\n  const result = {};\n\n  for (const key in data) {\n    let value = data[key]; // check if the value is an array\n\n    if (value && Array.isArray(value)) {\n      value = value.map(v => percentEncode(v));\n    } else {\n      value = percentEncode(value);\n    }\n\n    result[percentEncode(key)] = value;\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/tarungunampalli/Documents/twitter-oauth/node_modules/twitter-api-v2/dist/client-mixins/oauth1.helper.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","OAuth1Helper","crypto","require","constructor","options","nonceLength","consumerKeys","hash","base","key","createHmac","update","digest","authorize","request","accessTokens","oauthInfo","oauth_consumer_key","oauth_nonce","getNonce","oauth_signature_method","oauth_timestamp","getTimestamp","oauth_version","oauth_token","data","oauth_signature","getSignature","secret","toHeader","sorted","sortObject","header_value","element","indexOf","percentEncode","Authorization","slice","length","wordCharacters","i","Math","trunc","random","Date","getTime","tokenSecret","getBaseString","getSigningKey","method","toUpperCase","getBaseUrl","url","getParameterString","baseStringData","percentEncodeData","mergeObject","deParamUrl","dataStr","Array","isArray","sort","valString","forEach","item","split","default","obj1","obj2","keys","map","deParam","string","splitted","coupleKeyValue","push","decodeURIComponent","tmp","str","encodeURIComponent","replace"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OAuth1Helper = void 0;\nconst crypto = __importStar(require(\"crypto\"));\nclass OAuth1Helper {\n    constructor(options) {\n        this.nonceLength = 32;\n        this.consumerKeys = options.consumerKeys;\n    }\n    hash(base, key) {\n        return crypto\n            .createHmac('sha1', key)\n            .update(base)\n            .digest('base64');\n    }\n    authorize(request, accessTokens = {}) {\n        const oauthInfo = {\n            oauth_consumer_key: this.consumerKeys.key,\n            oauth_nonce: this.getNonce(),\n            oauth_signature_method: 'HMAC-SHA1',\n            oauth_timestamp: this.getTimestamp(),\n            oauth_version: '1.0',\n        };\n        if (accessTokens.key !== undefined) {\n            oauthInfo.oauth_token = accessTokens.key;\n        }\n        if (!request.data) {\n            request.data = {};\n        }\n        oauthInfo.oauth_signature = this.getSignature(request, accessTokens.secret, oauthInfo);\n        return oauthInfo;\n    }\n    toHeader(oauthInfo) {\n        const sorted = sortObject(oauthInfo);\n        let header_value = 'OAuth ';\n        for (const element of sorted) {\n            if (element.key.indexOf('oauth_') !== 0) {\n                continue;\n            }\n            header_value += percentEncode(element.key) + '=\"' + percentEncode(element.value) + '\",';\n        }\n        return {\n            // Remove the last ,\n            Authorization: header_value.slice(0, header_value.length - 1),\n        };\n    }\n    getNonce() {\n        const wordCharacters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n        let result = '';\n        for (let i = 0; i < this.nonceLength; i++) {\n            result += wordCharacters[Math.trunc(Math.random() * wordCharacters.length)];\n        }\n        return result;\n    }\n    getTimestamp() {\n        return Math.trunc(new Date().getTime() / 1000);\n    }\n    getSignature(request, tokenSecret, oauthInfo) {\n        return this.hash(this.getBaseString(request, oauthInfo), this.getSigningKey(tokenSecret));\n    }\n    getSigningKey(tokenSecret) {\n        return percentEncode(this.consumerKeys.secret) + '&' + percentEncode(tokenSecret || '');\n    }\n    getBaseString(request, oauthInfo) {\n        return request.method.toUpperCase() + '&'\n            + percentEncode(this.getBaseUrl(request.url)) + '&'\n            + percentEncode(this.getParameterString(request, oauthInfo));\n    }\n    getParameterString(request, oauthInfo) {\n        const baseStringData = sortObject(percentEncodeData(mergeObject(oauthInfo, mergeObject(request.data, deParamUrl(request.url)))));\n        let dataStr = '';\n        for (const { key, value } of baseStringData) {\n            // check if the value is an array\n            // this means that this key has multiple values\n            if (value && Array.isArray(value)) {\n                // sort the array first\n                value.sort();\n                let valString = '';\n                // serialize all values for this key: e.g. formkey=formvalue1&formkey=formvalue2\n                value.forEach((item, i) => {\n                    valString += key + '=' + item;\n                    if (i < value.length) {\n                        valString += '&';\n                    }\n                });\n                dataStr += valString;\n            }\n            else {\n                dataStr += key + '=' + value + '&';\n            }\n        }\n        // Remove the last character\n        return dataStr.slice(0, dataStr.length - 1);\n    }\n    getBaseUrl(url) {\n        return url.split('?')[0];\n    }\n}\nexports.OAuth1Helper = OAuth1Helper;\nexports.default = OAuth1Helper;\n// Helper functions //\nfunction mergeObject(obj1, obj2) {\n    return {\n        ...obj1 || {},\n        ...obj2 || {},\n    };\n}\nfunction sortObject(data) {\n    return Object.keys(data)\n        .sort()\n        .map(key => ({ key, value: data[key] }));\n}\nfunction deParam(string) {\n    const splitted = string.split('&');\n    const data = {};\n    for (const coupleKeyValue of splitted) {\n        const [key, value = ''] = coupleKeyValue.split('=');\n        // check if the key already exists\n        // this can occur if the QS part of the url contains duplicate keys like this: ?formkey=formvalue1&formkey=formvalue2\n        if (data[key]) {\n            // the key exists already\n            if (!Array.isArray(data[key])) {\n                // replace the value with an array containing the already present value\n                data[key] = [data[key]];\n            }\n            // and add the new found value to it\n            data[key].push(decodeURIComponent(value));\n        }\n        else {\n            // it doesn't exist, just put the found value in the data object\n            data[key] = decodeURIComponent(value);\n        }\n    }\n    return data;\n}\nfunction deParamUrl(url) {\n    const tmp = url.split('?');\n    if (tmp.length === 1)\n        return {};\n    return deParam(tmp[1]);\n}\nfunction percentEncode(str) {\n    return encodeURIComponent(str)\n        .replace(/!/g, '%21')\n        .replace(/\\*/g, '%2A')\n        .replace(/'/g, '%27')\n        .replace(/\\(/g, '%28')\n        .replace(/\\)/g, '%29');\n}\nfunction percentEncodeData(data) {\n    const result = {};\n    for (const key in data) {\n        let value = data[key];\n        // check if the value is an array\n        if (value && Array.isArray(value)) {\n            value = value.map(v => percentEncode(v));\n        }\n        else {\n            value = percentEncode(value);\n        }\n        result[percentEncode(key)] = value;\n    }\n    return result;\n}\n"]},"metadata":{},"sourceType":"script"}